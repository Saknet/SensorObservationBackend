version: "3"
services:
  
  redis-server: 
    image: 'redis'
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  database:
    image: postgis/postgis:13-master
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]        
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  sensorobservationbackend:
    build:
      context: .
    env_file: ./.env
    depends_on:
      - database
    ports:
      - '3000:3000' 
      
volumes:
  postgres-data:      